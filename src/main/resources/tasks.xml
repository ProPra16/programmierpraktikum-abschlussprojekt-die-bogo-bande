<tasks>
    <exercise name="Dateien selber auswählen">
        <description>fileload</description>
        <class name="TestCode">
            public class TestCode{
            public static String convert(){
            return null;
            }
            }
        </class>
        <test name="TestTest">
            import static org.junit.Assert.*;
            import org.junit.Test;

            public class TestTest{

            @Test
            public void aTest(){
            assertEquals(null,TestCode.convert());
            }

            }
        </test>
        <config>
            <babysteps value="True" time="120"/><!-- value false or true only; time in seconds!-->
            <timetracking value="True" />
        </config>
    </exercise>
    <exercise name="Grundgerüst">
        <description>Standardgerüst</description>
            <class name="TestCode">
public class TestCode{
     public static String convert(){
                return null;
     }
}
            </class>
        <test name="TestTest">
import static org.junit.Assert.*;
import org.junit.Test;

public class TestTest{

      @Test
      public void aTest(){
            assertEquals(null,TestCode.convert());
      }

}
            </test>
        <config>
            <babysteps value="True" time="120"/><!-- value false or true only; time in seconds!-->
            <timetracking value="True" />
        </config>
    </exercise>
    <exercise name="Römische Zahlen">
        <description>Konvertiert arabische in römische Zahlen.</description>
        <class name="RomanNumberConverter">
            public class RomanNumberConverter{
            public static String convert(){
            return null;
            }
            }
        </class>
        <test name="RomanNumbersTest">
            import static org.junit.Assert.*;
            import org.junit.Test;

            public class RomanNumbersTest{

            @Test
            public void aTest(){
            assertEquals(null,RomanNumberConverter.convert());
            }

            }
        </test>
        <config>
            <babysteps value="True" time="120"/><!-- value false or true only; time in seconds!-->
            <timetracking value="True" />
        </config>
    </exercise>
    <exercise name="Würfel">
        <description>Programmiere einen Würfel</description>
        <class name="Dice">
            public class Dice{
            public static int roll(){
            return 0;
            }
            }
        </class>
        <test name="DiceTest">
            import static org.junit.Assert.*;
            import org.junit.Test;

            public class DiceTest{

            @Test
            public void aTest(){
            assertEquals(0,Dice.roll());
            }

            }
        </test>
        <config>
            <babysteps value="True" time="120"/><!-- value false or true only; time in seconds!-->
            <timetracking value="True" />
        </config>
    </exercise>
    <exercise name="Münze">
        <description>Programmiere einen Münzwurf</description>
        <class name="Coin">
            public class Coin{
            public static int flip(){
            return 0;
            }
            }
        </class>
        <test name="CoinTest">
            import static org.junit.Assert.*;
            import org.junit.Test;

            public class CoinTest{

            @Test
            public void aTest(){
            assertEquals(0,Coin.flip());
            }

            }
        </test>
        <config>
            <babysteps value="True" time="120"/><!-- value false or true only; time in seconds!-->
            <timetracking value="True" />
        </config>
    </exercise>
</tasks>